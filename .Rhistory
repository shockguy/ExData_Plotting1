getwd()
dir()
ls()
install.packages(c("MASS", "Matrix", "mgcv"), lib="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages("swirl")
source('~/.active-rstudio-document')
5+7
5+7
5 + 7
bye()
swirl
swirl()
5 + 7
library(swirl)
swirl()
5 + 7
x <-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_sqrt
my_div
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
?seq
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect>=6
my_char<-c("My","name","is")
my_char
paste(my_char,collapse = " ")
my_name<-c(my_char,"Sean")
my_name
paste(my_char,collapse = " ")
paste(my_name,collapse = " ")
paste("Hello","world!",sep=" ")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep='')
paste(LETTERS,1:4,sep="-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
z
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=N)
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-(1:20,4,5)
my_matrix2<-matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames,my_data)
colnames(my_data)<-cnames
my_data
x<-4L
class(x)
x<-c(4,TRUE)
class(x)
x<-c(1,3,5)
y<-c(3,2,10)
z<-cbind(x,y)
dim(z)
z
class(z)
x<-list(2,"a","b",TRUE)
x[[2]]
x[2]
class(x[[2]])
class(x[2])
dir
ls()
dir()
read.csv("hw1_data.csv")
wdata<-read.csv("hw1_data.csv")
names(wdata)
wdata[1,2]
wdata[1]
wdata[1,]
wdata[1:2,]
wdata
dims(wdata)
dim(wdata)
wdata[-2:-1,]
wdata[152:153,]
?`:`
wdata[153:152,]
wdata[47,"Ozone"]
tf<-is.na(wdata)
tf
sum(tf)
tf<-is.na(wdata[,"Ozone"])
tf
sum(tf)
oz<-wdata[,tf]
oz<-wdata[,"Ozone"*tf]
oz<-wdata[tf,"Ozone"
]
oz
tf
oz<-wdata[!tf,"Ozone"]
oz
mean(oz)
so<-[,"Ozone">31 & "Temp">90]
so<-wdata[,"Ozone">31 & "Temp">90]
so
somean1<-mean(so[,"Solar.R"])
somean1
so2<-so[!is.na(),"Solar.R"]
so2<-so[!is.na(so["Solar.R"]),"Solar.R"]
so2
mean(so2)
names(wdata)
m6<-wdata[,"Month"==6]
m6
msix<-wdata[,"Month"==6]
msiz
msix
View(msix)
View(msix)
View(msix)
wdata[,"Month"==6]
wdata
wdata[,"Month"]
wdata[,"Month"=6]
wdata[,"Month"==6]
wdata[,"Month"==6.0]
wdata[,"Month"]
wdata[,"Temp"]
wdata[,"Temp","Month"]
wdata[,"Temp"&"Month"]
wdata[,"Temp":"Month"]
tf<-wdata[,"Month"==6]
tf
tf
tf<-wdata[,"Month">6]
tf
?`==`
wdata[153,"Month"==9]
wdata[153,"Month"]==9
wdata[,"Month"]==6
tf<-wdata[,"Month"]==6
msix<-wdata[tf,]
msix
mean(msix[,"Temp"])
ofive<-wdata[wdata[,"Month"]==5,]
ofive
max(ofive[,"Ozone"])
max(ofive[,"Ozone"],na.rm=TRUE)
so<-wdata[,"Ozone">31 & "Temp">90]
so<-wdata[,"Ozone">31 & "Temp">90]
so
so<-wdata[,"Ozone">31]
so
so<-wdata[,wdata[,"Ozone">31 & "Temp">90]]
so<-wdata[,wdata["Ozone"]>31 & wdata["Temp"]>90]
so<-wdata[wdata["Ozone"]>31 & wdata["Temp"]>90,]
so
?mean
mean(so[,"Solar.R"],na.rm=TRUE)
cube <- function(x,n){}
source('~/.active-rstudio-document')
cube
cube(3)
x<-1:10
if (x>5){
x<-0
}
f<-function(x){
g<-function(y){
y + z
}
z<-4
x+g(x)
}
z<-10
f(3)
x<-5
y<- if(x<3){}
x<-5
y<- if(x<3){
NA
} else {
10
}
?parent.frame
?complete.case
?complete.cases
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
plot(x,y)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
x1 <- rbinom(10, 2, 0.5)
x2 <- rnorm(10,0,20)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
summaryRprog()
x1 <- rbinom(10, 2, 0.5)
x2 <- rnorm(10,0,20)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
summaryRprog()
summaryRprof()
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
summaryRprof()
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
summaryRprof()
setwd("~/Documents/DS_track/Explore/project1/ExData_Plotting1")
source('~/Documents/DS_track/Explore/project1/ExData_Plotting1/plot1.R')
source('~/Documents/DS_track/Explore/project1/ExData_Plotting1/plot1.R')
#Plot 2
#Set up the plot device.  Specified width=height to get square proportions.
png("plot2.png", width=480, height=480)
gapyaxis=c("Global Active Power (kilowatts)")
plot(data$Time, data$Global_active_power, type="l",xlab="",ylab=gapyaxis)
#dev off so that the file is complete and display returns to screen.
dev.off()
source('~/Documents/DS_track/Explore/project1/ExData_Plotting1/plot3.R')
#Plot 4
#Set up the plot device.  Specified width=height to get square proportions.
png("plot4.png", width=480, height=480)
#Create the layout for the 4 plots; 2 rows, 2 columns.
#Fill order is column 1 from top -> next column top to bottom ->...
par(mfcol=c(2,2))
#Upper left plot
gapyaxis=c("Global Active Power (kilowatts)")
plot(data$Time, data$Global_active_power, type="l",xlab="",ylab=gapyaxis)
#Lower left plot
esmyaxis=c("Energy sub metering")
plot(data$Time, data$Sub_metering_1, type="l",xlab="",ylab=esmyaxis, col="black")
lines(data$Time, data$Sub_metering_2, type="l",xlab="",ylab="", col="red")
lines(data$Time, data$Sub_metering_3, type="l",xlab="",ylab="", col="blue")
leg.txt<-names(data)[7:9]
legend(x="topright", legend=leg.txt, lwd=c(2.5,2.5,2.5), col=c("black","red","blue"))
#Upper right plot
plot(data$Time,data$Voltage,type="l",xlab="datetime",ylab="Voltage")
#Lower right plot
plot(data$Time,data$Global_reactive_power,type="l",xlab="datetime",ylab="Global_reactive_power")
#dev off so that the file is complete and display returns to screen.
dev.off()
source('~/Documents/DS_track/Explore/project1/ExData_Plotting1/plot1.R')
setwd("~/Documents/DS_track/Explore/project1/ExData_Plotting1")
